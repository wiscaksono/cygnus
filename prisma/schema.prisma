generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id               String            @id @default(cuid())
    fullName         String            @unique
    email            String            @unique
    password         String
    image            String
    phone            String
    createdAt        DateTime          @default(now())
    updatedAt        DateTime          @updatedAt
    whatsAppToken    String?
    templateWhatsApp String            @default("") @db.VarChar(10000)
    EmailTemplate    EmailTemplate?
    pelamar          Pelamar[]
    TrackingPelamar  TrackingPelamar[]
}

model EmailTemplate {
    id          String @id @default(cuid())
    brevoApiKey String
    sender      String
    senderEmail String
    subject     String
    User        User   @relation(fields: [userId], references: [id])
    userId      String @unique
}

model Pelamar {
    id                String   @id @default(cuid())
    name              String
    email             String
    phone             String   @unique
    position          String
    interviewDate     DateTime
    portal            String
    invitedByWhatsapp Boolean  @default(false)
    invitedByEmail    Boolean  @default(false)
    hasWhatsapp       Boolean  @default(false)
    createdAt         DateTime @default(now())
    User              User     @relation(fields: [userId], references: [id])
    userId            String
    onTracking        Boolean  @default(false)
}

model TrackingPelamar {
    id             String    @id @default(cuid())
    name           String
    phone          String    @unique
    User           User      @relation(fields: [userId], references: [id])
    userId         String
    interview1     String?
    interview1Date DateTime?
    psikotest      HadirType @default(PENDING)
    compro         HadirType @default(PENDING)
    interview2     String?
    OJT            HadirType @default(PENDING)
    OJTDate        DateTime?
    hadirOJT       HadirType @default(PENDING)
    note           String?
    createdAt      DateTime  @default(now())
}

enum HadirType {
    HADIR
    TIDAK_HADIR
    PENDING
}
